name: Publish NuGet (on tag)

on:
  push:
    tags:
      - 'v*' # e.g., v7.0.0 or v7.0.0-preview.1

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pack-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Extract version from tag
        id: version
        shell: bash
        run: |
          TAG="${GITHUB_REF_NAME}"
          if [[ "$TAG" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)(-[0-9A-Za-z\.-]+)?$ ]]; then
            VERSION="${TAG#v}"
            echo "package_version=$VERSION" >> "$GITHUB_OUTPUT"
            echo "PACKAGE_VERSION=$VERSION" >> "$GITHUB_ENV"
            echo "Version parsed: $VERSION"
          else
            echo "Tag '$TAG' does not match expected pattern 'v<major>.<minor>.<patch>' or 'v<major>.<minor>.<patch>-<prerelease>'"
            exit 1
          fi

      - name: Restore
        run: dotnet restore src/Jiper.RavenDB.DependencyInjection/Jiper.RavenDB.DependencyInjection.csproj

      - name: Pack
        run: >
          dotnet pack src/Jiper.RavenDB.DependencyInjection/Jiper.RavenDB.DependencyInjection.csproj
          -c Release
          -o artifacts
          -p:ContinuousIntegrationBuild=true
          -p:PackageVersion="${{ steps.version.outputs.package_version }}"

      - name: Push to NuGet.org
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          if [ -z "$NUGET_API_KEY" ]; then
            echo "NUGET_API_KEY secret is not set"
            exit 1
          fi
          dotnet nuget push "artifacts/*.nupkg" --api-key "$NUGET_API_KEY" --source "https://api.nuget.org/v3/index.json" --skip-duplicate
